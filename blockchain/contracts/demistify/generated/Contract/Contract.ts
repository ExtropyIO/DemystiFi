// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ScoreUpdated extends ethereum.Event {
  get params(): ScoreUpdated__Params {
    return new ScoreUpdated__Params(this);
  }
}

export class ScoreUpdated__Params {
  _event: ScoreUpdated;

  constructor(event: ScoreUpdated) {
    this._event = event;
  }

  get _walletAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _newScore(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class WalletAdded extends ethereum.Event {
  get params(): WalletAdded__Params {
    return new WalletAdded__Params(this);
  }
}

export class WalletAdded__Params {
  _event: WalletAdded;

  constructor(event: WalletAdded) {
    this._event = event;
  }

  get _walletAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _IPFSDetails(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class WalletDeleted extends ethereum.Event {
  get params(): WalletDeleted__Params {
    return new WalletDeleted__Params(this);
  }
}

export class WalletDeleted__Params {
  _event: WalletDeleted;

  constructor(event: WalletDeleted) {
    this._event = event;
  }

  get _walletAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Contract__getDetailsForWalletResult {
  value0: BigInt;
  value1: string;

  constructor(value0: BigInt, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  getDetailsForWallet(
    _walletAddress: Address
  ): Contract__getDetailsForWalletResult {
    let result = super.call(
      "getDetailsForWallet",
      "getDetailsForWallet(address):(uint64,string)",
      [ethereum.Value.fromAddress(_walletAddress)]
    );

    return new Contract__getDetailsForWalletResult(
      result[0].toBigInt(),
      result[1].toString()
    );
  }

  try_getDetailsForWallet(
    _walletAddress: Address
  ): ethereum.CallResult<Contract__getDetailsForWalletResult> {
    let result = super.tryCall(
      "getDetailsForWallet",
      "getDetailsForWallet(address):(uint64,string)",
      [ethereum.Value.fromAddress(_walletAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__getDetailsForWalletResult(
        value[0].toBigInt(),
        value[1].toString()
      )
    );
  }

  getNumberWallets(): BigInt {
    let result = super.call(
      "getNumberWallets",
      "getNumberWallets():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getNumberWallets(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNumberWallets",
      "getNumberWallets():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddWalletCall extends ethereum.Call {
  get inputs(): AddWalletCall__Inputs {
    return new AddWalletCall__Inputs(this);
  }

  get outputs(): AddWalletCall__Outputs {
    return new AddWalletCall__Outputs(this);
  }
}

export class AddWalletCall__Inputs {
  _call: AddWalletCall;

  constructor(call: AddWalletCall) {
    this._call = call;
  }

  get _walletAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _IPFSDetails(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddWalletCall__Outputs {
  _call: AddWalletCall;

  constructor(call: AddWalletCall) {
    this._call = call;
  }
}

export class DeleteWalletCall extends ethereum.Call {
  get inputs(): DeleteWalletCall__Inputs {
    return new DeleteWalletCall__Inputs(this);
  }

  get outputs(): DeleteWalletCall__Outputs {
    return new DeleteWalletCall__Outputs(this);
  }
}

export class DeleteWalletCall__Inputs {
  _call: DeleteWalletCall;

  constructor(call: DeleteWalletCall) {
    this._call = call;
  }

  get _walletAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DeleteWalletCall__Outputs {
  _call: DeleteWalletCall;

  constructor(call: DeleteWalletCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateScoreCall extends ethereum.Call {
  get inputs(): UpdateScoreCall__Inputs {
    return new UpdateScoreCall__Inputs(this);
  }

  get outputs(): UpdateScoreCall__Outputs {
    return new UpdateScoreCall__Outputs(this);
  }
}

export class UpdateScoreCall__Inputs {
  _call: UpdateScoreCall;

  constructor(call: UpdateScoreCall) {
    this._call = call;
  }

  get _walletAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newScore(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateScoreCall__Outputs {
  _call: UpdateScoreCall;

  constructor(call: UpdateScoreCall) {
    this._call = call;
  }
}
